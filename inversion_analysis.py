import torch
torch.backends.cudnn.benchmark = True
from model import *
from e4e_projection import projection_with_image as e4e_projection
from matplotlib import pyplot as plt
import numpy as np

latent_dim = 512
device = 'cuda'
original_generator = Generator(1024, latent_dim, 8, 2).to(device)
ckpt = torch.load('../../models/multistyle/stylegan2-ffhq-config-f.pt', map_location=lambda storage, loc: storage)
original_generator.load_state_dict(ckpt["g_ema"], strict=False)
z = torch.randn([1, 512]).to(device)
wz = original_generator.get_latent(z)
zerosample = original_generator([z])
zerosample = (zerosample + 1.0) / 2.0
plt.imshow(np.transpose(zerosample[0].cpu().detach().numpy(), (1,2,0)))
plt.title("Image generated by random W")
plt.show()

my_w, images = e4e_projection(zerosample, device)
images = (images + 1.0) / 2.0
plt.imshow(np.transpose(images[0].cpu().detach().numpy(), (1,2,0)))
plt.title("Image inverted by e4e")
plt.show()

for i in range(1,11):
    newz = wz.repeat(18,1).unsqueeze(0) + 0.1*i*my_w.unsqueeze(0)
    newsample = original_generator(newz, input_is_latent=True)
    newsample = (newsample + 1.0) / 2.0
    plt.imshow(np.transpose(newsample[0].cpu().detach().numpy(), (1, 2, 0)))
    plt.title(f"Linear Interpolation: {i}")
    plt.show()
print("Done!")
